<project name="argo" default="compile">

    <description>
        Argo build file
    </description>

    <property name="location.lib" value="lib"/>
    <property name="location.src" value="src/main"/>
    <property name="location.src.test" value="src/test"/>
    <property name="location.src.performancetest" value="src/performancetest"/>

    <property name="location.build" value="build"/>
    <property name="location.classes" value="${location.build}/classes"/>
    <property name="location.optimisedclasses" value="${location.build}/optimised-classes"/>
    <property name="location.testclasses" value="${location.build}/test-classes"/>
    <property name="location.testresources" value="${location.src.test}/resources"/>
    <property name="location.testresults" value="${location.build}/test-results"/>
    <property name="location.performancetestclasses" value="${location.build}/performance-test-classes"/>
    <property name="location.performancetestresults" value="${location.build}/performance-test-results"/>

    <property name="location.dist" value="${location.build}/dist"/>

    <path id="all-libs">
        <fileset dir="${location.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="test-compile-libs">
        <fileset dir="${location.lib}/test/compile">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="performance-test-compile-libs">
        <fileset dir="${location.lib}/performancetest/compile">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="performance-test-run-libs">
        <fileset dir="${location.lib}/performancetest/run">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile" description="compiles all classes">
        <echo message="Starting compile"/>
        <delete dir="${location.classes}"/>
        <mkdir dir="${location.classes}"/>
        <delete dir="${location.optimisedclasses}"/>
        <mkdir dir="${location.optimisedclasses}"/>
        <delete dir="${location.testclasses}"/>
        <mkdir dir="${location.testclasses}"/>
        <delete dir="${location.performancetestclasses}"/>
        <mkdir dir="${location.performancetestclasses}"/>

        <javac destdir="${location.classes}" debug="on" source="1.6" target="1.6">
            <src path="${location.src}"/>
        </javac>

        <javac destdir="${location.optimisedclasses}" debug="on" optimize="true" source="1.6" target="1.6">
            <src path="${location.src}"/>
        </javac>

        <javac destdir="${location.testclasses}" debug="on" source="1.6" target="1.6">
            <src path="${location.src.test}"/>
            <classpath refid="test-compile-libs"/>
            <classpath location="${location.classes}"/>
        </javac>

        <javac destdir="${location.performancetestclasses}" debug="on" source="1.6" target="1.6">
            <src path="${location.src.performancetest}"/>
            <classpath refid="performance-test-compile-libs"/>
            <classpath refid="test-compile-libs"/>
            <classpath location="${location.classes}"/>
        </javac>

        <copy todir="${location.classes}">
            <fileset dir="src/main/java"/>
        </copy>

        <copy todir="${location.performancetestclasses}">
            <fileset dir="src/performancetest/java"/>
        </copy>

        <echo message="Finished compile"/>
    </target>

    <target name="test" depends="compile" description="builds and runs unit tests">
        <delete dir="${location.testresults}"/>
        <mkdir dir="${location.testresults}"/>
        <junit printsummary="yes">
            <classpath>
                <pathelement location="${location.testclasses}"/>
                <pathelement location="${location.classes}"/>
                <path refid="test-compile-libs"/>
                <pathelement location="${location.testresources}"/>
            </classpath>
            <batchtest fork="yes" todir="${location.testresults}">
                <fileset dir="${location.testclasses}">
                    <include name="**/*Test.class"/>
                </fileset>
                <formatter type="xml"/>
            </batchtest>
        </junit>

        <junitreport todir="${location.testresults}">
            <fileset dir="${location.testresults}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${location.testresults}"/>
        </junitreport>
    </target>

    <target name="performance-test" depends="compile" description="builds and runs performance tests">
        <delete dir="${location.performancetestresults}"/>
        <mkdir dir="${location.performancetestresults}"/>
        <junit printsummary="yes">
            <classpath>
                <pathelement location="${location.performancetestclasses}"/>
                <pathelement location="${location.classes}"/>
                <path refid="performance-test-compile-libs"/>
                <path refid="test-compile-libs"/>
                <path refid="performance-test-run-libs"/>
                <pathelement location="${location.src.performancetest}"/>
            </classpath>
            <batchtest fork="yes" todir="${location.performancetestresults}">
                <fileset dir="${location.performancetestclasses}">
                    <include name="**/*Test.class"/>
                </fileset>
                <formatter type="xml"/>
            </batchtest>
        </junit>

        <junitreport todir="${location.performancetestresults}">
            <fileset dir="${location.performancetestresults}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${location.performancetestresults}"/>
        </junitreport>
    </target>

    <target name="javadoc">
        <mkdir dir="${location.dist}/javadoc"/>
        <javadoc destdir="${location.dist}/javadoc">
            <sourcepath path="${location.src}/java"/>
        </javadoc>
    </target>

    <target name="development-version" unless="release">
        <property file="version.properties"/>
        <tstamp>
            <format property="timestamp" pattern="yyyyMMddHHmm" locale="en" timezone="UTC"/>
        </tstamp>
        <property name="version" value="${argo.version}-${timestamp}"/>
    </target>

    <target name="release-version" if="release">
        <property file="version.properties"/>
        <property name="version" value="${argo.version}"/>
    </target>

    <target name="determine-version" depends="development-version, release-version">
        <echo message="Version for build is: ${version}"/>
    </target>

    <target name="distribute" depends="compile, determine-version">
        <echo message="Creating release structure"/>
        <delete dir="${location.dist}"/>
        <mkdir dir="${location.dist}"/>

        <antcall target="javadoc"/>
        <jar basedir="${location.classes}" destfile="${location.dist}/argo-${version}.jar"/>
        <jar basedir="${location.optimisedclasses}" destfile="${location.dist}/argo-small-${version}.jar"/>

    </target>

    <target name="release" description="creates an offical release">
        <property name="release" value="true"/>
        <antcall target="distribute"/>
    </target>
</project>