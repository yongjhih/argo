<project name="argo" default="compile">

    <description>
        Argo build file
    </description>

    <property name="location.lib" value="lib"/>
    <property name="location.src" value="src/main"/>
    <property name="location.src.test" value="src/test"/>

    <property name="location.build" value="build"/>
    <property name="location.classes" value="${location.build}/classes"/>
    <property name="location.testclasses" value="${location.build}/test-classes"/>

    <property name="location.dist" value="${location.build}/dist"/>

    <path id="all-libs">
        <fileset dir="${location.lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="main-compile-libs">
        <fileset dir="${location.lib}/main/compile">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="test-compile-libs">
        <fileset dir="${location.lib}/main/compile">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${location.lib}/test/compile">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="compile">
        <echo message="Starting compile"/>
        <delete dir="${location.classes}"/>
        <mkdir dir="${location.classes}"/>
        <delete dir="${location.testclasses}"/>
        <mkdir dir="${location.testclasses}"/>

        <javac destdir="${location.classes}" debug="on" source="1.6" target="1.6">
            <src path="${location.src}"/>
            <classpath refid="main-compile-libs"/>
        </javac>

        <javac destdir="${location.testclasses}" debug="on" source="1.6" target="1.6">
            <src path="${location.src.test}"/>
            <classpath refid="test-compile-libs"/>
            <classpath location="${location.classes}"/>
        </javac>

        <copy todir="${location.classes}">
            <fileset dir="src/main">
                <include name="**/*.java"/>
            </fileset>
        </copy>
        <echo message="Finished compile"/>
    </target>

    <target name="test" depends="compile">
        <junit printsummary="yes" haltonfailure="yes">
            <formatter type="plain" usefile="false"/>
            <classpath>
                <pathelement location="${location.testclasses}"/>
                <pathelement location="${location.classes}"/>
                <path refid="test-compile-libs"/>
            </classpath>
            <batchtest fork="yes">
                <fileset dir="${location.testclasses}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="development-version" unless="release">
        <property file="version.properties"/>
        <tstamp>
            <format property="timestamp" pattern="yyyyMMddHHmm" locale="en" timezone="UTC"/>
        </tstamp>
        <property name="version" value="${argo.version}-${timestamp}"/>
    </target>

    <target name="release-version" if="release">
        <property file="version.properties"/>
        <property name="version" value="${argo.version}"/>
    </target>

    <target name="determine-version" depends="development-version, release-version">
        <echo message="Version for build is: ${version}"/>
    </target>

    <target name="dist" depends="compile, determine-version">
        <echo message="Creating release structure"/>
        <delete dir="${location.dist}"/>
        <mkdir dir="${location.dist}"/>

        <jar basedir="${location.classes}" destfile="${location.dist}/iburndown-${version}.jar"/>

    </target>

    <target name="release" description="creates an offical release">
        <property name="release" value="true"/>
        <antcall target="dist"/>
    </target>
</project>